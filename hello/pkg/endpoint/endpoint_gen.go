// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "github.com/faith/goKitAdvanced4/hello/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	StatusEndpoint   endpoint.Endpoint
	GetEndpoint      endpoint.Endpoint
	ValidateEndpoint endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.HelloService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		GetEndpoint:      MakeGetEndpoint(s),
		StatusEndpoint:   MakeStatusEndpoint(s),
		ValidateEndpoint: MakeValidateEndpoint(s),
	}
	for _, m := range mdw["Status"] {
		eps.StatusEndpoint = m(eps.StatusEndpoint)
	}
	for _, m := range mdw["Get"] {
		eps.GetEndpoint = m(eps.GetEndpoint)
	}
	for _, m := range mdw["Validate"] {
		eps.ValidateEndpoint = m(eps.ValidateEndpoint)
	}
	return eps
}
